---
name: "Build & Test"
on:  # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - "*"
  merge_group:
    types:
      - "checks_requested"
jobs:
  build:
    name: "Build Binary"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v5"
      - uses: "authzed/actions/setup-go@main"
      - uses: "authzed/actions/go-build@main"

  image-build:
    name: "Build Container Image"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v5"
      - uses: "authzed/actions/docker-build@main"

  unit:
    name: "Run Unit Tests"
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: ["ubuntu-latest"] # TODO(miparnisari): add "windows-latest" after fixing the tests

    steps:
      - uses: "actions/checkout@v5"
      - uses: "authzed/actions/setup-go@main"
      - uses: "authzed/actions/go-test@main"

  development:
    name: "WASM Tests"
    # TODO: figure out workaround for apparmor issue
    # see #449
    runs-on: "ubuntu-22.04"
    steps:
      - uses: "actions/checkout@v5"
      - uses: "authzed/actions/setup-go@main"
        with:
          # NOTE: This needs to match the toolchain version, or else
          # go env gopath won't point at the right install location for the
          # wasm tool.
          go-version: "1.23.2"
          cache: "false"  # do not cache to prevent cache poisoning
      - name: "Install wasmbrowsertest"
        run: "go install github.com/agnivade/wasmbrowsertest@latest"
      - name: "Run WASM Tests"
        run: "GOOS=js GOARCH=wasm go test ./pkg/wasm/... -exec $(go env GOPATH)/bin/wasmbrowsertest"
